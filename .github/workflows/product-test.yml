name: Defender CLI Scan

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  defender-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: ${{ vars.REGISTRY_HOST }}/${{ vars.ARTIFACT_NAME }}:latest
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Download Defender CLI
      run: |
        echo "Downloading Defender CLI" 
        curl -L -o defender "https://dfddefendercli-afdendpoint-dogfood-ahgnapadd4eecdbr.z01.azurefd.net/public/latest/Defender_linux-x64"
        chmod +x defender

    - name: List contents of directory
      run: ls -la

    - name: Run Defender Version
      run: ./defender --version

    - name: Run Defender Help
      run: ./defender --help
      
    - name: Run Defender CLI Scan
      run: |
        # $CLI_EXECUTABLE scan image ${{ vars.ARTIFACT_NAME }}:latest --scanner mdvm || {
        ./defender scan image vuln/testdocker:latest --scanner MDVM 
      env:
        DFD_BACKEND_ENVIRONMENT: "PPE"
        GDN_NUGET_SOURCE_FEED_OVERRIDE: "https://pkgs.dev.azure.com/msdoustest/msdo/_packaging/msdotestfeed2/nuget/v3/index.json"
        #GDN_MDC_CLI_TENANT_ID: "dad46ef7-083d-488a-bd4b-8926fc7f83a1"
        #GDN_MDC_CLI_CLIENT_ID: "42e28c99-6d63-4202-b7fd-253687bab74a"
        #GDN_MDC_CLI_CLIENT_SECRET: "_0j8Q~dgGom849PyetMvB2rigs_Cvv4b~8GcqdBk"
  
    - name: Upload Defender CLI results (placeholder)
      if: always()
      run: |
        echo "Placeholder for uploading Defender CLI scan results"
        echo "Results would be uploaded as artifacts here once scan is properly configured"
